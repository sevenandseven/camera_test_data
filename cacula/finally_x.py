
import math

# 第一组数据x坐标的误差
x1 =  ['109.01338531385159', '109.92237528428166', '108.84400891021717', '109.833574456684', '108.32150626540147', '109.15492375787638', '108.8663268143882', '106.09664376475119', '105.46491208680277', '109.21924590955726', '109.01295032438789', '105.97077843477734', '113.26311332378273', '110.40865639682853', '109.64432920805595', '109.81393176134638', '109.35601851035332', '107.52821768282459', '109.28107752647817', '111.27243170589624', 
'110.782727428017', '109.9180427265093', '110.29042249958586', '110.29042249958586', '108.88961191875984', '108.10680461059997', '111.73488630901133', '111.73488630901133', '113.61157951772408', '110.0730883563503', '112.3319449781128', '112.25409108717426', '107.71540335853396', '111.79276809966069', '109.6585785834953', '108.59811823897809', '110.56611076976675', '109.98345107129093', '112.20606466190573', '106.86168104371959', '113.38553817857589', '108.91052442750771', '111.49172033197495', '109.09657016522422', '110.51231019837124', '110.02103383151085', '113.03010124764602', '108.60244463195548']

# 第二组数据x的误差
x2 = ['39.05274152297176', '39.36478833869364', '38.87021330374073', '43.97663390454355', '41.01237651125996', '38.83672229843223', '33.71478020360654', '37.59297735466588', '33.71478020360654', '-41.622662927889984', '-34.91848640754361', '32.31693758082423', '37.82741642063114', '37.37831682298575', '42.02321488170662', '34.871709843671255', '35.4976152641157', '35.54673466227723', '34.98428852740683', '35.23077746904252']

# 第三组x的误差
x3 = ['191.06501470124817', '185.0393827029506', '191.1037854683933', '188.20557644783943', '178.10871589321397', '189.03058730114287', '182.72088993180324', '187.52534591741048']


x1_float = [float(x) for x in x1]
# print(x1_float)
value_to_subtract = 150
x1_subtracted_squared = [(x - value_to_subtract)*0.1 for x in x1_float]
#print(x1_subtracted_squared)

# 对列表中的每个值平方之后求和
sum_of_squares = sum([num ** 2 for num in x1_subtracted_squared])

print(sum_of_squares)
# ave = math.sqrt(sum_of_squares / len(x1) )
# print(ave)

x2_float = [float(x) for x in x2]
value_to_subtract2 = 60
x2_subtracted_squared = [(x - value_to_subtract2)*0.1 for x in x2_float]

# 对列表中的每个值平方之后求和
sum_of_squares2 = sum([num ** 2 for num in x2_subtracted_squared])
print(sum_of_squares2)
# x2_sum = sum(x2_subtracted_squared)

x3_float = [float(x) for x in x3]
value_to_subtract3 = 250
x3_subtracted_squared = [(x - value_to_subtract3) *0.1 for x in x3_float]
sum_of_squares3 = sum([num ** 2 for num in x3_subtracted_squared])
print(sum_of_squares3)

n = len(x1) + len(x2) + len(x3)
# print(x3_subtracted_squared)
sum_all = sum_of_squares + sum_of_squares2 + sum_of_squares3
print(sum_of_squares)

# 和（真实值和预测值的插值 平方  * 0.1转换为cm）  除以总数 开根号
ave = math.sqrt(sum_all / len(x1) )
print(ave)
